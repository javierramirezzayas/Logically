
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BUFFER CKT DEL DISPLAY EQUALS EXIT FILENAME HELP LOAD NAME NAND NOR NOT OR SIMPLIFY TABLE VENN XNOR XOR\n    assign : NAME EQUALS expr term\n           | func\n    \n    expr : OR\n         | AND\n         | NOT\n         | XNOR\n         | XOR\n         | NAND\n         | NOR\n         | BUFFER\n     \n    term : NAME term\n         | NAME\n    \n    func : TABLE NAME\n         | DEL NAME\n         | VENN NAME\n         | CKT NAME\n         | SIMPLIFY NAME\n         | DISPLAY NAME\n         | LOAD FILENAME\n         | HELP\n         | EXIT\n    '
    
_lr_action_items = {'FILENAME':([4,],[16,]),'BUFFER':([20,],[21,]),'DISPLAY':([0,],[1,]),'DEL':([0,],[2,]),'CKT':([0,],[3,]),'NOT':([20,],[25,]),'$end':([6,8,9,10,13,14,15,16,17,18,19,30,31,32,],[0,-21,-20,-2,-18,-14,-16,-19,-15,-17,-13,-1,-12,-11,]),'AND':([20,],[22,]),'XNOR':([20,],[29,]),'LOAD':([0,],[4,]),'VENN':([0,],[5,]),'NOR':([20,],[23,]),'SIMPLIFY':([0,],[7,]),'EQUALS':([12,],[20,]),'NAND':([20,],[26,]),'EXIT':([0,],[8,]),'OR':([20,],[28,]),'HELP':([0,],[9,]),'XOR':([20,],[24,]),'TABLE':([0,],[11,]),'NAME':([0,1,2,3,5,7,11,21,22,23,24,25,26,27,28,29,31,],[12,13,14,15,17,18,19,-10,-4,-9,-7,-5,-8,31,-3,-6,31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assign':([0,],[6,]),'expr':([20,],[27,]),'func':([0,],[10,]),'term':([27,31,],[30,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assign","S'",1,None,None,None),
  ('assign -> NAME EQUALS expr term','assign',4,'p_assign','logically_parser.py',12),
  ('assign -> func','assign',1,'p_assign','logically_parser.py',13),
  ('expr -> OR','expr',1,'p_expr','logically_parser.py',44),
  ('expr -> AND','expr',1,'p_expr','logically_parser.py',45),
  ('expr -> NOT','expr',1,'p_expr','logically_parser.py',46),
  ('expr -> XNOR','expr',1,'p_expr','logically_parser.py',47),
  ('expr -> XOR','expr',1,'p_expr','logically_parser.py',48),
  ('expr -> NAND','expr',1,'p_expr','logically_parser.py',49),
  ('expr -> NOR','expr',1,'p_expr','logically_parser.py',50),
  ('expr -> BUFFER','expr',1,'p_expr','logically_parser.py',51),
  ('term -> NAME term','term',2,'p_term','logically_parser.py',58),
  ('term -> NAME','term',1,'p_term','logically_parser.py',59),
  ('func -> TABLE NAME','func',2,'p_func','logically_parser.py',70),
  ('func -> DEL NAME','func',2,'p_func','logically_parser.py',71),
  ('func -> VENN NAME','func',2,'p_func','logically_parser.py',72),
  ('func -> CKT NAME','func',2,'p_func','logically_parser.py',73),
  ('func -> SIMPLIFY NAME','func',2,'p_func','logically_parser.py',74),
  ('func -> DISPLAY NAME','func',2,'p_func','logically_parser.py',75),
  ('func -> LOAD FILENAME','func',2,'p_func','logically_parser.py',76),
  ('func -> HELP','func',1,'p_func','logically_parser.py',77),
  ('func -> EXIT','func',1,'p_func','logically_parser.py',78),
]
