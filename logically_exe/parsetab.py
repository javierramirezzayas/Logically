
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BUFFER CKT DEL DISPLAY EQUALS EXIT HELP NAME NAND NOR NOT OR SIMPLIFY TABLE VENN XNOR XOR\n    assign : NAME EQUALS expr term\n           | func\n    \n    expr : OR\n         | AND\n         | NOT\n         | XNOR\n         | XOR\n         | NAND\n         | NOR\n         | BUFFER\n     \n    term : NAME term\n         | NAME\n    \n    func : TABLE NAME\n         | DEL NAME\n         | VENN NAME\n         | CKT NAME\n         | SIMPLIFY NAME\n         | DISPLAY NAME\n         | HELP\n         | EXIT\n    '
    
_lr_action_items = {'NAME':([0,3,5,6,7,8,9,19,20,21,22,23,24,25,26,27,28,],[2,13,14,15,16,17,18,-3,28,-7,-8,-6,-4,-5,-9,-10,28,]),'EQUALS':([2,],[12,]),'VENN':([0,],[3,]),'DEL':([0,],[5,]),'$end':([1,4,10,11,13,14,15,16,17,18,28,29,30,],[-2,0,-19,-20,-15,-14,-17,-16,-13,-18,-12,-1,-11,]),'AND':([12,],[24,]),'XOR':([12,],[21,]),'NAND':([12,],[22,]),'OR':([12,],[19,]),'XNOR':([12,],[23,]),'NOR':([12,],[26,]),'CKT':([0,],[7,]),'TABLE':([0,],[8,]),'SIMPLIFY':([0,],[6,]),'DISPLAY':([0,],[9,]),'HELP':([0,],[10,]),'NOT':([12,],[25,]),'BUFFER':([12,],[27,]),'EXIT':([0,],[11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func':([0,],[1,]),'expr':([12,],[20,]),'assign':([0,],[4,]),'term':([20,28,],[29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assign","S'",1,None,None,None),
  ('assign -> NAME EQUALS expr term','assign',4,'p_assign','logically_parser.py',12),
  ('assign -> func','assign',1,'p_assign','logically_parser.py',13),
  ('expr -> OR','expr',1,'p_expr','logically_parser.py',42),
  ('expr -> AND','expr',1,'p_expr','logically_parser.py',43),
  ('expr -> NOT','expr',1,'p_expr','logically_parser.py',44),
  ('expr -> XNOR','expr',1,'p_expr','logically_parser.py',45),
  ('expr -> XOR','expr',1,'p_expr','logically_parser.py',46),
  ('expr -> NAND','expr',1,'p_expr','logically_parser.py',47),
  ('expr -> NOR','expr',1,'p_expr','logically_parser.py',48),
  ('expr -> BUFFER','expr',1,'p_expr','logically_parser.py',49),
  ('term -> NAME term','term',2,'p_term','logically_parser.py',56),
  ('term -> NAME','term',1,'p_term','logically_parser.py',57),
  ('func -> TABLE NAME','func',2,'p_func','logically_parser.py',68),
  ('func -> DEL NAME','func',2,'p_func','logically_parser.py',69),
  ('func -> VENN NAME','func',2,'p_func','logically_parser.py',70),
  ('func -> CKT NAME','func',2,'p_func','logically_parser.py',71),
  ('func -> SIMPLIFY NAME','func',2,'p_func','logically_parser.py',72),
  ('func -> DISPLAY NAME','func',2,'p_func','logically_parser.py',73),
  ('func -> HELP','func',1,'p_func','logically_parser.py',74),
  ('func -> EXIT','func',1,'p_func','logically_parser.py',75),
]
