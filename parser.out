Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> assign
Rule 1     assign -> NAME EQUALS expr term
Rule 2     assign -> func
Rule 3     expr -> OR
Rule 4     expr -> AND
Rule 5     expr -> NOT
Rule 6     expr -> XNOR
Rule 7     expr -> XOR
Rule 8     expr -> NAND
Rule 9     expr -> NOR
Rule 10    expr -> BUFFER
Rule 11    term -> NAME term
Rule 12    term -> NAME
Rule 13    func -> TABLE NAME
Rule 14    func -> DEL NAME
Rule 15    func -> VENN NAME
Rule 16    func -> CKT NAME
Rule 17    func -> SIMPLIFY NAME
Rule 18    func -> DISPLAY NAME
Rule 19    func -> LOAD FILENAME
Rule 20    func -> HELP
Rule 21    func -> EXIT

Terminals, with rules where they appear

AND                  : 4
BUFFER               : 10
CKT                  : 16
DEL                  : 14
DISPLAY              : 18
EQUALS               : 1
EXIT                 : 21
FILENAME             : 19
HELP                 : 20
LOAD                 : 19
NAME                 : 1 11 12 13 14 15 16 17 18
NAND                 : 8
NOR                  : 9
NOT                  : 5
OR                   : 3
SIMPLIFY             : 17
TABLE                : 13
VENN                 : 15
XNOR                 : 6
XOR                  : 7
error                : 

Nonterminals, with rules where they appear

assign               : 0
expr                 : 1
func                 : 2
term                 : 1 11

Parsing method: LALR

state 0

    (0) S' -> . assign
    (1) assign -> . NAME EQUALS expr term
    (2) assign -> . func
    (13) func -> . TABLE NAME
    (14) func -> . DEL NAME
    (15) func -> . VENN NAME
    (16) func -> . CKT NAME
    (17) func -> . SIMPLIFY NAME
    (18) func -> . DISPLAY NAME
    (19) func -> . LOAD FILENAME
    (20) func -> . HELP
    (21) func -> . EXIT

    NAME            shift and go to state 12
    TABLE           shift and go to state 11
    DEL             shift and go to state 2
    VENN            shift and go to state 5
    CKT             shift and go to state 3
    SIMPLIFY        shift and go to state 7
    DISPLAY         shift and go to state 1
    LOAD            shift and go to state 4
    HELP            shift and go to state 9
    EXIT            shift and go to state 8

    assign                         shift and go to state 6
    func                           shift and go to state 10

state 1

    (18) func -> DISPLAY . NAME

    NAME            shift and go to state 13


state 2

    (14) func -> DEL . NAME

    NAME            shift and go to state 14


state 3

    (16) func -> CKT . NAME

    NAME            shift and go to state 15


state 4

    (19) func -> LOAD . FILENAME

    FILENAME        shift and go to state 16


state 5

    (15) func -> VENN . NAME

    NAME            shift and go to state 17


state 6

    (0) S' -> assign .



state 7

    (17) func -> SIMPLIFY . NAME

    NAME            shift and go to state 18


state 8

    (21) func -> EXIT .

    $end            reduce using rule 21 (func -> EXIT .)


state 9

    (20) func -> HELP .

    $end            reduce using rule 20 (func -> HELP .)


state 10

    (2) assign -> func .

    $end            reduce using rule 2 (assign -> func .)


state 11

    (13) func -> TABLE . NAME

    NAME            shift and go to state 19


state 12

    (1) assign -> NAME . EQUALS expr term

    EQUALS          shift and go to state 20


state 13

    (18) func -> DISPLAY NAME .

    $end            reduce using rule 18 (func -> DISPLAY NAME .)


state 14

    (14) func -> DEL NAME .

    $end            reduce using rule 14 (func -> DEL NAME .)


state 15

    (16) func -> CKT NAME .

    $end            reduce using rule 16 (func -> CKT NAME .)


state 16

    (19) func -> LOAD FILENAME .

    $end            reduce using rule 19 (func -> LOAD FILENAME .)


state 17

    (15) func -> VENN NAME .

    $end            reduce using rule 15 (func -> VENN NAME .)


state 18

    (17) func -> SIMPLIFY NAME .

    $end            reduce using rule 17 (func -> SIMPLIFY NAME .)


state 19

    (13) func -> TABLE NAME .

    $end            reduce using rule 13 (func -> TABLE NAME .)


state 20

    (1) assign -> NAME EQUALS . expr term
    (3) expr -> . OR
    (4) expr -> . AND
    (5) expr -> . NOT
    (6) expr -> . XNOR
    (7) expr -> . XOR
    (8) expr -> . NAND
    (9) expr -> . NOR
    (10) expr -> . BUFFER

    OR              shift and go to state 28
    AND             shift and go to state 22
    NOT             shift and go to state 25
    XNOR            shift and go to state 29
    XOR             shift and go to state 24
    NAND            shift and go to state 26
    NOR             shift and go to state 23
    BUFFER          shift and go to state 21

    expr                           shift and go to state 27

state 21

    (10) expr -> BUFFER .

    NAME            reduce using rule 10 (expr -> BUFFER .)


state 22

    (4) expr -> AND .

    NAME            reduce using rule 4 (expr -> AND .)


state 23

    (9) expr -> NOR .

    NAME            reduce using rule 9 (expr -> NOR .)


state 24

    (7) expr -> XOR .

    NAME            reduce using rule 7 (expr -> XOR .)


state 25

    (5) expr -> NOT .

    NAME            reduce using rule 5 (expr -> NOT .)


state 26

    (8) expr -> NAND .

    NAME            reduce using rule 8 (expr -> NAND .)


state 27

    (1) assign -> NAME EQUALS expr . term
    (11) term -> . NAME term
    (12) term -> . NAME

    NAME            shift and go to state 31

    term                           shift and go to state 30

state 28

    (3) expr -> OR .

    NAME            reduce using rule 3 (expr -> OR .)


state 29

    (6) expr -> XNOR .

    NAME            reduce using rule 6 (expr -> XNOR .)


state 30

    (1) assign -> NAME EQUALS expr term .

    $end            reduce using rule 1 (assign -> NAME EQUALS expr term .)


state 31

    (11) term -> NAME . term
    (12) term -> NAME .
    (11) term -> . NAME term
    (12) term -> . NAME

    $end            reduce using rule 12 (term -> NAME .)
    NAME            shift and go to state 31

    term                           shift and go to state 32

state 32

    (11) term -> NAME term .

    $end            reduce using rule 11 (term -> NAME term .)

